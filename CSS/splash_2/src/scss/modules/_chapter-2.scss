body {
  margin: 0;
  padding: 0;
}

$max_bubble_size: 40vmin;
$min_bubble_size: 20vmin;

$duration_floating: 3s;
$duration_float_stopping: 1s;
$duration_float_end: 3s;

.chapter-2[data-state="active"] {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background: linear-gradient(-20deg, #0f5398, #cee7fd);

  .bubble {
    transition: 1s all;
    width: $max_bubble_size;
    height: $max_bubble_size;
    position: absolute;
    border-radius: 50%;
    box-shadow: 2px 20px 20px #3884af;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
    }

    span {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
    }
    span:nth-child(1) {
      background-color: rgba(255, 255, 255, 0.3);
      background-image: radial-gradient(
        transparent 0%,
        transparent 40%,
        rgba(0, 170, 255, 0.9) 90%
      );
      z-index: 2;

      &::before,
      &::after {
        position: absolute;
        content: "";
      }

      &::before {
        $w: 60%;
        $h: 24%;
        top: $h / 4;
        left: (100%/2) - $w/2;
        width: $w;
        height: $h;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.98);
        filter: blur(10px);
      }

      &::after {
        $size: 90%;
        width: $size;
        height: $size;
        top: (100% - $size) / 2;
        left: (100% - $size) / 2;
        border-radius: 50%;
        background-color: transparent;
        box-shadow: inset 0px -20px 0 3px rgba(255, 255, 255, 0.98);
        filter: blur(8px);
      }
    }

    span:nth-child(2) {
      background-size: 90% auto;
      background-position: 80% 0;
      z-index: 1;
    }
    &:hover {
      cursor: pointer;
    }
  }

  @for $i from 1 through 40 {
    .bubble:nth-child(#{$i}) {
      $diff: $max_bubble_size - $min_bubble_size;
      $randomSize: $min_bubble_size +
        ($max_bubble_size * (random($diff) / $diff));
      $randomZIndex: random(10);
      // TODO: vminではなくvh, vwを使用して画面いっぱいに分散させたい. unit違いにより計算できない.
      $top: 100vmin * random(10) / 10;
      $left: 100vmin * (random(10) / 10);

      width: $randomSize;
      height: $randomSize;
      z-index: $randomZIndex;
      top: $top - ($randomSize / 2);
      left: $left - ($randomSize / 2);

      $float_time: $randomSize;
    //   animation: chapter1_float #{random(30)}s 0s cubic-bezier(0.24, 0.99, 0.79, 1.14) forwards,
    }
    .bubble:nth-child(#{$i}) span:nth-child(2){
      $turn_time: random(20);
      background-image: url("../src/images/character#{(($i % 9) + 1)}.png");
      animation: chapter1_turn#{($i % 9 ) + 1} #{$turn_time}s linear forwards infinite;
    }
  }

  .bubble[data-state="clicked"] {
    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      transform: scale(0);
      z-index: 4;
    }
    &::before {
      background-color: #0e5196;
      animation: scale0-1 0.2s ease 0s forwards;
    }
    &::after {
      background-color: #fff;
      animation: scale0-1 0.2s ease 0.1s forwards;
    }
    animation: fadeout 0.01s ease 0.3s forwards;
    span {
      display: none;
    }
  }
}
