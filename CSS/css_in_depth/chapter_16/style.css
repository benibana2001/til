.flyin-grid {
  margin: 0 1 rem;
  perspective: 600px;
}

.flyin-grid__item {
  animation: fly-in 1200ms ease-in;
  animation-fill-mode: backwards;
}

.flyin-grid__item:nth-child(2) {
  animation-delay: 0.15s;
}

.flyin-grid__item:nth-child(3) {
  animation-delay: 0.3s;
}

.flyin-grid__item:nth-child(4) {
  animation-delay: 0.45s;
}

.card {
  margin-bottom: 1em;
  padding: 0.5em;
  background-color: rgb(27, 27, 29);
  color: hsl(210, 34%, 83%);
  box-shadow: 0.2em 0.5em 1em rgba(0, 0, 0, 0.3);
}

.card > img {
  width: 100%;
}

@media (min-width: 30em) {
  .flyin-grid {
    display: flex;
    flex-wrap: wrap;
    margin: 0 5rem;
  }

  .flyin-grid__item {
    flex: 1 1 300px;
    margin-left: 0.5em;
    margin-right: 0.5em;
    max-width: 600px;
  }

  @supports (display: grid) {
    .flyin-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      grid-gap: 2em;
    }

    .flyin-grid__item {
      max-width: initial;
      margin: 0;
    }
  }
}

/* Form */
form {
  max-width: 500px;
}

label,
textarea {
  display: block;
  margin-bottom: 1em;
}

textarea {
  width: 100%;
  font-size: inherit;
}

form > button {
  padding: 0.6em 1em;
  border: 0;
  background-color: hsl(220, 50%, 50%);
  color: white;
  font: inherit;
  transition: background-color 0.3s linear;
}

form > button:hover {
  background-color: hsl(220, 45%, 40%);
}

button.is-loading {
  position: relative;
  color: transparent;
}
button.is-loading::after {
  position: absolute;
  content: "";
  display: block;
  width: 1.4em;
  height: 1.4em;
  top: 50%;
  left: 50%;
  margin-left: -0.7em;
  margin-top: -0.7em;
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 0.5s linear infinite;
}

.shake {
  animation: shake 0.7s linear;
}

/* From Chapter 15 */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}
*:focus {
  outline: none;
}

body {
  background-color: hsl(200, 80%, 30%);
  /* background-image: radial-gradient(hsl(200, 80%, 30%), hsl(210, 80%, 20%)); */
  background-image: radial-gradient(ellipse at top, #e66465 0, transparent),
    radial-gradient(ellipse at bottom, #4d9f0c, transparent);

  color: white;
  font-family: Raleway, Helvetica, Arial, sans-serif;
  line-height: 1.4;
  margin: 0;
  min-height: 100vh;
}

h1,
h2,
h3 {
  font-family: Alfa Slab One, serif;
  font-weight: 400;
}

main {
  display: block;
}

img {
  max-width: 100%;
}

header {
  position: relative;
}

.page-header {
  margin: 0;
  padding: 1rem;
}
@media (min-width: 30em) {
  .page-header {
    padding: 2rem 2rem 3rem;
  }
}

.header-ball {
  --box-width: 30px;
  --box-height: 30px;
  /* --ball-base-color: rgb(254, 233, 0); */
  --ball-base-color-shadow: rgb(120, 120, 120);
  --ball-border-color: rgba(0, 0, 0);
  /*  */
  position: absolute;
  top: 2em;
  right: 2em;
  box-sizing: border-box;
  width: var(--box-width);
  height: var(--box-height);
  background-color: var(--ball-base-color);
  background-image: radial-gradient(
      circle at 0 0,
      rgb(255, 255, 255),
      transparent
    ),
    radial-gradient(
      circle at 100% 100%,
      var(--ball-base-color-shadow),
      transparent
    );

  border-radius: 100%;
  animation: shake-for-infinite 2.8s linear 0s infinite;
  transition: opacity 0.3s ease-out;
}

.header-ball:hover {
  animation: shake 0.3s ease-out infinite;
  background-color: blue;
}

.overlay {
  position: fixed;
  z-index: 1;
  display: none;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.4);
}

.nav-links {
  display: flex;
  justify-content: space-between;
  margin-top: 0;
  margin-bottom: 1rem;
  padding: 0 1rem;
  list-style: none;
}
.nav-links > li + li {
  margin-left: 0.8em;
}
.nav-links > li > a {
  display: block;
  padding: 0.8em 0;
  color: white;
  font-size: 0.8rem;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.06em;
}
.nav-links__icon {
  height: 1.5em;
  width: 1.5em;
  vertical-align: -0.2em;
}
.nav-links > li > a:hover {
  color: hsl(40, 100%, 70%);
}

@media (min-width: 30em) {
  .nav-links {
    display: block;
    padding: 1em;
    margin-bottom: 0;
  }
  .nav-links > li + li {
    margin-left: 0;
  }
  .nav-links__label {
    display: inline-block;
    margin-left: 1em;
    padding-right: 1em;
    opacity: 0;
    transform: translate(-1em);
    transition: transform 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.8),
      opacity 0.4s linear;
  }
  .nav-links:hover .nav-links__label,
  .nav-links a:focus > .nav-links__label {
    opacity: 1;
    transform: translate(0);
  }
  .nav-links > li:nth-child(2) .nav-links__label {
    transition-delay: 0.1s;
  }
  .nav-links > li:nth-child(3) .nav-links__label {
    transition-delay: 0.2s;
  }
  .nav-links > li:nth-child(4) .nav-links__label {
    transition-delay: 0.3s;
  }
  .nav-links > li:nth-child(5) .nav-links__label {
    transition-delay: 0.4s;
  }

  .nav-links__icon {
    transition: transform 0.2s ease-out;
  }
  .nav-links a:hover > .nav-links__icon,
  .nav-links a:focus > .nav-links__icon {
    transform: scale(1.3);
  }
}

@media (min-width: 30em) {
  .main-nav {
    position: fixed;
    top: 8.25rem;
    left: 0;
    z-index: 10;
    border-color: transparent;
    transition-delay: background-color 0.5s linear;
    border-top-right-radius: 0.5em;
    border-bottom-right-radius: 0.5em;
  }
  .main-nav:hover {
    background-color: rgba(0, 0, 0, 0.6);
  }
}

@keyframes fly-in {
  0% {
    transform: rotateY(-180deg);
    opacity: 0;
  }
  56% {
    transform: rotateY(10deg);
    opacity: 1;
  }
  100% {
    transform: rotateY(0);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70% {
    transform: translateX(-0.4em);
  }
  20%,
  40%,
  60% {
    transform: translateX(0.4em);
  }
  80% {
    transform: translateX(0.3em);
  }
  90% {
    transform: translateX(-0.3em);
  }
}

@keyframes shake-for-infinite {
  0%,
  100% {
    transform: rotate(0) translate(0);
  }
  5%,
  15%,
  25%,
  35% {
    transform: rotate(-10deg) translate(-4px, 0);
  }
  10%,
  20%,
  30% {
    transform: rotate(10deg) translate(4px, 0);
  }
  40% {
    transform: rotate(-6deg) translate(-2px, 0);
  }
  45% {
    transform: rotate(6deg) translate(2px, 0);
  }
  50% {
    transform: rotate(6deg) translate(-1px, 0);
  }
}
